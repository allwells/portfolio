{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport { Notification } from '@mantine/core';\nimport getAutoClose from './get-auto-close/get-auto-close.js';\n\nfunction NotificationContainer(_ref) {\n  var className = _ref.className,\n      sx = _ref.sx,\n      notification = _ref.notification,\n      autoClose = _ref.autoClose,\n      onHide = _ref.onHide,\n      innerRef = _ref.innerRef;\n  var autoCloseTimeout = getAutoClose(autoClose, notification);\n  var hideTimeout = useRef();\n\n  var handleHide = function handleHide() {\n    onHide(notification.id);\n    window.clearTimeout(hideTimeout.current);\n  };\n\n  var cancelDelayedHide = function cancelDelayedHide() {\n    clearTimeout(hideTimeout.current);\n  };\n\n  var handleDelayedHide = function handleDelayedHide() {\n    if (typeof autoCloseTimeout === \"number\") {\n      hideTimeout.current = window.setTimeout(handleHide, autoCloseTimeout);\n    }\n  };\n\n  useEffect(function () {\n    if (typeof notification.onOpen === \"function\") {\n      notification.onOpen(notification);\n    }\n  }, []);\n  useEffect(function () {\n    handleDelayedHide();\n    return cancelDelayedHide;\n  }, [autoClose, notification.autoClose]);\n  return /* @__PURE__ */React.createElement(Notification, {\n    sx: sx,\n    className: className,\n    title: notification.title,\n    onClose: handleHide,\n    color: notification.color,\n    radius: notification.radius,\n    icon: notification.icon,\n    loading: notification.loading,\n    disallowClose: notification.disallowClose,\n    onMouseEnter: cancelDelayedHide,\n    onMouseLeave: handleDelayedHide,\n    ref: innerRef\n  }, notification.message);\n}\n\nNotificationContainer.displayName = \"@mantine/notifications/NotificationContainer\";\nexport default NotificationContainer;","map":null,"metadata":{},"sourceType":"module"}