{"ast":null,"code":"import _toConsumableArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useQueue, randomId } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\n\nfunction useNotificationsState(_ref) {\n  var limit = _ref.limit;\n\n  var _useQueue = useQueue({\n    initialValues: [],\n    limit: limit\n  }),\n      state = _useQueue.state,\n      queue = _useQueue.queue,\n      update = _useQueue.update,\n      cleanQueue = _useQueue.cleanQueue;\n\n  var showNotification = function showNotification(notification) {\n    var id = notification.id || randomId();\n    update(function (notifications) {\n      if (notification.id && notifications.some(function (n) {\n        return n.id === notification.id;\n      })) {\n        return notifications;\n      }\n\n      return [].concat(_toConsumableArray(notifications), [__spreadProps(__spreadValues({}, notification), {\n        id: id\n      })]);\n    });\n    return id;\n  };\n\n  var updateNotification = function updateNotification(id, notification) {\n    return update(function (notifications) {\n      var index = notifications.findIndex(function (n) {\n        return n.id === id;\n      });\n\n      if (index === -1) {\n        return notifications;\n      }\n\n      var newNotifications = _toConsumableArray(notifications);\n\n      newNotifications[index] = notification;\n      return newNotifications;\n    });\n  };\n\n  var hideNotification = function hideNotification(id) {\n    return update(function (notifications) {\n      return notifications.filter(function (notification) {\n        if (notification.id === id) {\n          typeof notification.onClose === \"function\" && notification.onClose(notification);\n          return false;\n        }\n\n        return true;\n      });\n    });\n  };\n\n  var clean = function clean() {\n    return update(function () {\n      return [];\n    });\n  };\n\n  return {\n    notifications: state,\n    queue: queue,\n    showNotification: showNotification,\n    updateNotification: updateNotification,\n    hideNotification: hideNotification,\n    cleanQueue: cleanQueue,\n    clean: clean\n  };\n}\n\nexport default useNotificationsState;","map":null,"metadata":{},"sourceType":"module"}