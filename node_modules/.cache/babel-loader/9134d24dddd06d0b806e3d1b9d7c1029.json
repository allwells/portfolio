{"ast":null,"code":"import _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from 'react';\n\nfunction useDebouncedValue(value, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    leading: false\n  };\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      _value = _useState2[0],\n      setValue = _useState2[1];\n\n  var mountedRef = useRef(false);\n  var timeoutRef = useRef(null);\n  var cooldownRef = useRef(false);\n\n  var cancel = function cancel() {\n    return window.clearTimeout(timeoutRef.current);\n  };\n\n  useEffect(function () {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = window.setTimeout(function () {\n          cooldownRef.current = false;\n          setValue(value);\n        }, wait);\n      }\n    }\n  }, [value, options.leading]);\n  useEffect(function () {\n    mountedRef.current = true;\n    return cancel;\n  }, []);\n  return [_value, cancel];\n}\n\nexport { useDebouncedValue };","map":null,"metadata":{},"sourceType":"module"}