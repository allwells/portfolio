{"ast":null,"code":"import _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useMemo, useEffect } from 'react';\nvar defaultState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\nvar browser = typeof window !== \"undefined\";\n\nfunction useResizeObserver() {\n  var frameID = useRef(0);\n  var ref = useRef(null);\n\n  var _useState = useState(defaultState),\n      _useState2 = _slicedToArray(_useState, 2),\n      rect = _useState2[0],\n      setRect = _useState2[1];\n\n  var observer = useMemo(function () {\n    return browser ? new ResizeObserver(function (entries) {\n      var entry = entries[0];\n\n      if (entry) {\n        cancelAnimationFrame(frameID.current);\n        frameID.current = requestAnimationFrame(function () {\n          if (ref.current) {\n            setRect(entry.contentRect);\n          }\n        });\n      }\n    }) : null;\n  }, []);\n  useEffect(function () {\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return function () {\n      observer.disconnect();\n\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n  return [ref, rect];\n}\n\nfunction useElementSize() {\n  var _useResizeObserver = useResizeObserver(),\n      _useResizeObserver2 = _slicedToArray(_useResizeObserver, 2),\n      ref = _useResizeObserver2[0],\n      _useResizeObserver2$ = _useResizeObserver2[1],\n      width = _useResizeObserver2$.width,\n      height = _useResizeObserver2$.height;\n\n  return {\n    ref: ref,\n    width: width,\n    height: height\n  };\n}\n\nexport { useElementSize, useResizeObserver };","map":null,"metadata":{},"sourceType":"module"}