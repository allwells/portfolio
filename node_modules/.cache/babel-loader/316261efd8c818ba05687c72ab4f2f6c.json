{"ast":null,"code":"import { useRef } from 'react';\nimport { useDidUpdate } from '@mantine/hooks';\n\nfunction useAccordionFocus(itemsCount) {\n  var controlsRefs = useRef([]);\n\n  var handleItemKeydown = function handleItemKeydown(index) {\n    return function (event) {\n      var _a, _b;\n\n      if (event.code === \"ArrowDown\") {\n        event.preventDefault();\n        var nextFocusElement = controlsRefs.current[index + 1];\n\n        if (nextFocusElement) {\n          nextFocusElement.focus();\n        } else {\n          (_a = controlsRefs.current[0]) == null ? void 0 : _a.focus();\n        }\n      }\n\n      if (event.code === \"ArrowUp\") {\n        event.preventDefault();\n        var previousFocusElement = controlsRefs.current[index - 1];\n\n        if (previousFocusElement) {\n          previousFocusElement.focus();\n        } else {\n          (_b = controlsRefs.current[controlsRefs.current.length - 1]) == null ? void 0 : _b.focus();\n        }\n      }\n    };\n  };\n\n  var assignControlRef = function assignControlRef(index) {\n    return function (node) {\n      controlsRefs.current[index] = node;\n    };\n  };\n\n  useDidUpdate(function () {\n    controlsRefs.current = controlsRefs.current.slice(0, itemsCount);\n  }, [itemsCount]);\n  return {\n    handleItemKeydown: handleItemKeydown,\n    assignControlRef: assignControlRef\n  };\n}\n\nexport { useAccordionFocus };","map":null,"metadata":{},"sourceType":"module"}