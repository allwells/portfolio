{"ast":null,"code":"import _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useMove, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './Saturation.styles.js';\nimport { convertHsvaTo } from '../converters/converters.js';\n\nfunction Saturation(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$focusable = _ref.focusable,\n      focusable = _ref$focusable === void 0 ? true : _ref$focusable,\n      _ref$__staticSelector = _ref.__staticSelector,\n      __staticSelector = _ref$__staticSelector === void 0 ? \"saturation\" : _ref$__staticSelector,\n      size = _ref.size,\n      color = _ref.color,\n      saturationLabel = _ref.saturationLabel,\n      classNames = _ref.classNames,\n      styles = _ref.styles;\n\n  var _useStyles = useStyles({\n    size: size\n  }, {\n    classNames: classNames,\n    styles: styles,\n    name: __staticSelector\n  }),\n      classes = _useStyles.classes;\n\n  var _useState = useState({\n    x: value.s / 100,\n    y: 1 - value.v / 100\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var _useMove = useMove(function (_ref2) {\n    var x = _ref2.x,\n        y = _ref2.y;\n    onChange({\n      s: Math.round(x * 100),\n      v: Math.round((1 - y) * 100)\n    });\n  }),\n      ref = _useMove.ref;\n\n  useEffect(function () {\n    setPosition({\n      x: value.s / 100,\n      y: 1 - value.v / 100\n    });\n  }, [value.s, value.v]);\n\n  var handleArrow = function handleArrow(event, pos) {\n    event.preventDefault();\n\n    var _position = clampUseMovePosition(pos);\n\n    onChange({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100)\n    });\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    switch (event.nativeEvent.code) {\n      case \"ArrowUp\":\n        {\n          handleArrow(event, {\n            y: position.y - 0.05,\n            x: position.x\n          });\n          break;\n        }\n\n      case \"ArrowDown\":\n        {\n          handleArrow(event, {\n            y: position.y + 0.05,\n            x: position.x\n          });\n          break;\n        }\n\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturation,\n    ref: ref,\n    role: \"slider\",\n    \"aria-label\": saturationLabel,\n    \"aria-valuenow\": position.x,\n    \"aria-valuetext\": convertHsvaTo(\"rgba\", value),\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundColor: \"hsl(\".concat(value.h, \", 100%, 50%)\")\n    }\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundImage: \"linear-gradient(90deg, #fff, transparent)\"\n    }\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundImage: \"linear-gradient(0deg, #000, transparent)\"\n    }\n  }), /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector: __staticSelector,\n    classNames: classNames,\n    styles: styles,\n    position: position,\n    className: classes.saturationThumb,\n    style: {\n      backgroundColor: color\n    },\n    size: size\n  }));\n}\n\nSaturation.displayName = \"@mantine/core/Saturation\";\nexport { Saturation };","map":null,"metadata":{},"sourceType":"module"}