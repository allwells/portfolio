{"ast":null,"code":"import _defineProperty from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { forwardRef, useState } from 'react';\nimport useStyles from './Thumb.styles.js';\nimport { Box } from '../../Box/Box.js';\nimport { Transition } from '../../Transition/Transition.js';\nvar Thumb = forwardRef(function (_ref, ref) {\n  var max = _ref.max,\n      min = _ref.min,\n      value = _ref.value,\n      position = _ref.position,\n      label = _ref.label,\n      dragging = _ref.dragging,\n      onMouseDown = _ref.onMouseDown,\n      color = _ref.color,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      size = _ref.size,\n      labelTransition = _ref.labelTransition,\n      labelTransitionDuration = _ref.labelTransitionDuration,\n      labelTransitionTimingFunction = _ref.labelTransitionTimingFunction,\n      labelAlwaysOn = _ref.labelAlwaysOn,\n      thumbLabel = _ref.thumbLabel,\n      _onFocus = _ref.onFocus,\n      _onBlur = _ref.onBlur,\n      showLabelOnHover = _ref.showLabelOnHover,\n      _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children;\n\n  var _useStyles = useStyles({\n    color: color,\n    size: size\n  }, {\n    classNames: classNames,\n    styles: styles,\n    name: \"Slider\"\n  }),\n      classes = _useStyles.classes,\n      cx = _useStyles.cx,\n      theme = _useStyles.theme;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var isVisible = labelAlwaysOn || dragging || focused || showLabelOnHover;\n  return /* @__PURE__ */React.createElement(Box, {\n    tabIndex: 0,\n    role: \"slider\",\n    \"aria-label\": thumbLabel,\n    \"aria-valuemax\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuenow\": value,\n    ref: ref,\n    className: cx(classes.thumb, _defineProperty({}, classes.dragging, dragging)),\n    onFocus: function onFocus() {\n      setFocused(true);\n      typeof _onFocus === \"function\" && _onFocus();\n    },\n    onBlur: function onBlur() {\n      setFocused(false);\n      typeof _onBlur === \"function\" && _onBlur();\n    },\n    onTouchStart: onMouseDown,\n    onMouseDown: onMouseDown,\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    sx: {\n      left: \"\".concat(position, \"%\")\n    }\n  }, children, /* @__PURE__ */React.createElement(Transition, {\n    mounted: label != null && isVisible,\n    duration: labelTransitionDuration,\n    transition: labelTransition,\n    timingFunction: labelTransitionTimingFunction || theme.transitionTimingFunction\n  }, function (transitionStyles) {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      style: transitionStyles,\n      className: classes.label\n    }, label);\n  }));\n});\nThumb.displayName = \"@mantine/core/SliderThumb\";\nexport { Thumb };","map":null,"metadata":{},"sourceType":"module"}