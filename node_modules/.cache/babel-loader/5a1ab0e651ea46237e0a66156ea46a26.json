{"ast":null,"code":"import _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/allie/Project/client-thecurrent/src/components/CreatePost/CreatePost.jsx\";\nimport \"./CreatePost.css\";\nimport { Button, Card, Container, Form, Spinner } from \"react-bootstrap\";\nimport { Input, InputWrapper } from \"@mantine/core\";\nimport React, { useEffect, useState } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@aaditya1978/ckeditor5-build-classic\";\nimport Footer from \"../Footer/Footer\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SelectForm from \"../SelectForm/SelectForm\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function CreatePost() {\n  var navigate = useNavigate();\n\n  var notifySuccess = function notifySuccess() {\n    return toast.success(\"Published Successfully!\");\n  };\n\n  var notifyError = function notifyError(message) {\n    return toast.error(message);\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      author = _useState6[0],\n      setAuthor = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      content = _useState8[0],\n      setContent = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      image = _useState10[0],\n      setImage = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageData = _useState12[0],\n      setImageData = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      imageName = _useState14[0],\n      setImageName = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      submitting = _useState16[0],\n      setSubmitting = _useState16[1];\n\n  useEffect(function () {\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitting(true);\n    var sanitizeContent = content.trim();\n\n    if (sanitizeContent.length < 200) {\n      notifyError(\"Content must be at least 200 characters long\");\n      setSubmitting(false);\n      return;\n    }\n\n    var formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"content\", sanitizeContent);\n    formData.append(\"author\", author);\n    formData.append(\"category\", category);\n    formData.append(\"image\", imageData);\n    formData.append(\"date\", new Date());\n    formData.append(\"token\", localStorage.getItem(\"token\"));\n    axios({\n      method: \"post\",\n      url: \"\".concat(process.env.REACT_APP_BASE_URL, \"/create\"),\n      data: formData\n    }).then(function (res) {\n      setSubmitting(false);\n      notifySuccess();\n      setInterval(function () {\n        navigate(\"/\");\n      }, 2100);\n    }).catch(function (err) {\n      setSubmitting(false);\n      notifyError(err.response.data.error);\n      navigate(\"/login\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createpost-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Create Post\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectForm, {\n    category: category,\n    setCategory: setCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    id: \"input-demo\",\n    label: \"Author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"input-demo\",\n    placeholder: \"Author name\",\n    value: author,\n    onChange: function onChange(event) {\n      return setAuthor(event.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Add Cover Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"File\",\n    accept: \"image/*\",\n    value: imageName,\n    onChange: function onChange(e) {\n      setImage(URL.createObjectURL(e.target.files[0]));\n      setImageData(e.target.files[0]);\n      setImageName(e.target.value);\n    },\n    name: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }), image && /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-preview\",\n    src: image,\n    alt: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }), image && /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"remove-image\",\n    onClick: function onClick() {\n      setImage(null);\n      setImageData(null);\n      setImageName(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Remove\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"postTitle\",\n    placeholder: \"Post Title Here\",\n    value: title,\n    onChange: function onChange(e) {\n      setTitle(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      setContent(data);\n    },\n    config: {\n      placeholder: \"Start typing your blog here...\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, Object.assign({\n    type: \"submit\",\n    variant: \"success\",\n    className: \"mt-3 submit\"\n  }, submitting ? {\n    disabled: true\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), submitting ? /*#__PURE__*/React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }) : \"Publish\")))))), /*#__PURE__*/React.createElement(Toaster, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/allie/Project/client-thecurrent/src/components/CreatePost/CreatePost.jsx"],"names":["Button","Card","Container","Form","Spinner","Input","InputWrapper","React","useEffect","useState","toast","Toaster","CKEditor","ClassicEditor","Footer","NavBar","SelectForm","axios","useNavigate","CreatePost","navigate","notifySuccess","success","notifyError","message","error","title","setTitle","category","setCategory","author","setAuthor","content","setContent","image","setImage","imageData","setImageData","imageName","setImageName","submitting","setSubmitting","localStorage","getItem","handleSubmit","e","preventDefault","sanitizeContent","trim","length","formData","FormData","append","Date","method","url","process","env","REACT_APP_BASE_URL","data","then","res","setInterval","catch","err","response","marginBottom","event","currentTarget","value","URL","createObjectURL","target","files","editor","getData","placeholder","disabled"],"mappings":"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","sourcesContent":["import \"./CreatePost.css\";\n\nimport { Button, Card, Container, Form, Spinner } from \"react-bootstrap\";\nimport { Input, InputWrapper } from \"@mantine/core\";\nimport React, { useEffect, useState } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@aaditya1978/ckeditor5-build-classic\";\nimport Footer from \"../Footer/Footer\";\nimport NavBar from \"../NavBar/NavBar\";\nimport SelectForm from \"../SelectForm/SelectForm\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function CreatePost() {\n  const navigate = useNavigate();\n\n  const notifySuccess = () => toast.success(\"Published Successfully!\");\n  const notifyError = (message) => toast.error(message);\n\n  const [title, setTitle] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [imageData, setImageData] = useState(null);\n  const [imageName, setImageName] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n    const sanitizeContent = content.trim();\n\n    if (sanitizeContent.length < 200) {\n      notifyError(\"Content must be at least 200 characters long\");\n      setSubmitting(false);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"content\", sanitizeContent);\n    formData.append(\"author\", author);\n    formData.append(\"category\", category);\n    formData.append(\"image\", imageData);\n    formData.append(\"date\", new Date());\n    formData.append(\"token\", localStorage.getItem(\"token\"));\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_BASE_URL}/create`,\n      data: formData,\n    })\n      .then((res) => {\n        setSubmitting(false);\n\n        notifySuccess();\n\n        setInterval(() => {\n          navigate(\"/\");\n        }, 2100);\n      })\n      .catch((err) => {\n        setSubmitting(false);\n        notifyError(err.response.data.error);\n        navigate(\"/login\");\n      });\n  };\n\n  return (\n    <>\n      <NavBar />\n      <div className=\"createpost-container\">\n        <Container>\n          <Card>\n            <Card.Body>\n              <h1 className=\"heading\">Create Post</h1>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\">\n                  <SelectForm category={category} setCategory={setCategory} />\n                  <InputWrapper\n                    style={{ marginBottom: \"1rem\" }}\n                    id=\"input-demo\"\n                    label=\"Author\"\n                  >\n                    <Input\n                      id=\"input-demo\"\n                      placeholder=\"Author name\"\n                      value={author}\n                      onChange={(event) => setAuthor(event.currentTarget.value)}\n                    />\n                  </InputWrapper>\n                  <Form.Label>Add Cover Image</Form.Label>\n                  <Form.Control\n                    type=\"File\"\n                    accept=\"image/*\"\n                    value={imageName}\n                    onChange={(e) => {\n                      setImage(URL.createObjectURL(e.target.files[0]));\n                      setImageData(e.target.files[0]);\n                      setImageName(e.target.value);\n                    }}\n                    name=\"image\"\n                  />\n                  {image && (\n                    <img className=\"img-preview\" src={image} alt=\"preview\" />\n                  )}\n                  <br />\n                  {image && (\n                    <Button\n                      variant=\"primary\"\n                      className=\"remove-image\"\n                      onClick={() => {\n                        setImage(null);\n                        setImageData(null);\n                        setImageName(\"\");\n                      }}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                  <Form.Control\n                    type=\"text\"\n                    className=\"postTitle\"\n                    placeholder=\"Post Title Here\"\n                    value={title}\n                    onChange={(e) => {\n                      setTitle(e.target.value);\n                    }}\n                    required\n                  />\n                </Form.Group>\n                <CKEditor\n                  editor={ClassicEditor}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setContent(data);\n                  }}\n                  config={{\n                    placeholder: \"Start typing your blog here...\",\n                  }}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"success\"\n                  className=\"mt-3 submit\"\n                  {...(submitting ? { disabled: true } : {})}\n                >\n                  {submitting ? (\n                    <Spinner as=\"span\" animation=\"border\" role=\"status\" />\n                  ) : (\n                    \"Publish\"\n                  )}\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Container>\n      </div>\n\n      <Toaster />\n      <Footer />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}