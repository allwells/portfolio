{"ast":null,"code":"import _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nvar ColorSchemeContext = createContext(null);\n\nfunction useMantineColorScheme() {\n  var ctx = useContext(ColorSchemeContext);\n\n  if (!ctx) {\n    throw new Error(\"useMantineColorScheme hook was called outside of context, make sure your app is wrapped with ColorSchemeProvider component\");\n  }\n\n  return ctx;\n}\n\nfunction ColorSchemeProvider(_ref) {\n  var colorScheme = _ref.colorScheme,\n      toggleColorScheme = _ref.toggleColorScheme,\n      children = _ref.children;\n\n  var _useState = useState(\"init\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  useEffect(function () {\n    setKey(\"update\");\n  }, []);\n  return /* @__PURE__ */React.createElement(ColorSchemeContext.Provider, {\n    key: key,\n    value: {\n      colorScheme: colorScheme,\n      toggleColorScheme: toggleColorScheme\n    }\n  }, children);\n}\n\nColorSchemeProvider.displayName = \"@mantine/core/ColorSchemeProvider\";\nexport { ColorSchemeProvider, useMantineColorScheme };","map":null,"metadata":{},"sourceType":"module"}