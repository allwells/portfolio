{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal.js';\n\nfunction shallowCompare(prevValue, currValue) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (var i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies) {\n  var ref = useRef([]);\n  var updateRef = useRef(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nfunction useShallowEffect(cb, dependencies) {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n\nexport { useShallowEffect };","map":null,"metadata":{},"sourceType":"module"}