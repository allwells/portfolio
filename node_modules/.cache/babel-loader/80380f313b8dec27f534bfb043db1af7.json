{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { createStyles, MANTINE_SIZES } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar getColumnWidth = function getColumnWidth(colSpan, columns) {\n  return \"\".concat(100 / (columns / colSpan), \"%\");\n};\n\nvar getColumnOffset = function getColumnOffset(offset, columns) {\n  return offset ? \"\".concat(100 / (columns / offset), \"%\") : void 0;\n};\n\nfunction getBreakpointsStyles(_ref) {\n  var sizes = _ref.sizes,\n      offsets = _ref.offsets,\n      theme = _ref.theme,\n      columns = _ref.columns,\n      grow = _ref.grow;\n  return MANTINE_SIZES.reduce(function (acc, size) {\n    if (typeof sizes[size] === \"number\") {\n      acc[\"@media (min-width: \".concat(theme.breakpoints[size] + 1, \"px)\")] = {\n        flexBasis: getColumnWidth(sizes[size], columns),\n        flexShrink: 0,\n        maxWidth: grow ? \"unset\" : getColumnWidth(sizes[size], columns),\n        marginLeft: getColumnOffset(offsets[size], columns)\n      };\n    }\n\n    return acc;\n  }, {});\n}\n\nvar useStyles = createStyles(function (theme, _ref2) {\n  var gutter = _ref2.gutter,\n      grow = _ref2.grow,\n      offset = _ref2.offset,\n      offsetXs = _ref2.offsetXs,\n      offsetSm = _ref2.offsetSm,\n      offsetMd = _ref2.offsetMd,\n      offsetLg = _ref2.offsetLg,\n      offsetXl = _ref2.offsetXl,\n      columns = _ref2.columns,\n      span = _ref2.span,\n      xs = _ref2.xs,\n      sm = _ref2.sm,\n      md = _ref2.md,\n      lg = _ref2.lg,\n      xl = _ref2.xl;\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      flexGrow: grow ? 1 : 0,\n      padding: theme.fn.size({\n        size: gutter,\n        sizes: theme.spacing\n      }) / 2,\n      marginLeft: getColumnOffset(offset, columns),\n      flexBasis: getColumnWidth(span, columns),\n      flexShrink: 0,\n      maxWidth: grow ? \"unset\" : getColumnWidth(span, columns)\n    }, getBreakpointsStyles({\n      sizes: {\n        xs: xs,\n        sm: sm,\n        md: md,\n        lg: lg,\n        xl: xl\n      },\n      offsets: {\n        xs: offsetXs,\n        sm: offsetSm,\n        md: offsetMd,\n        lg: offsetLg,\n        xl: offsetXl\n      },\n      theme: theme,\n      columns: columns,\n      grow: grow\n    }))\n  };\n});\nexport default useStyles;","map":null,"metadata":{},"sourceType":"module"}