{"ast":null,"code":"import _defineProperty from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useState } from 'react';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\n\nfunction useListState() {\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var append = function append() {\n    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n      items[_key] = arguments[_key];\n    }\n\n    return setState(function (current) {\n      return [].concat(_toConsumableArray(current), items);\n    });\n  };\n\n  var prepend = function prepend() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    return setState(function (current) {\n      return [].concat(items, _toConsumableArray(current));\n    });\n  };\n\n  var insert = function insert(index) {\n    for (var _len3 = arguments.length, items = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      items[_key3 - 1] = arguments[_key3];\n    }\n\n    return setState(function (current) {\n      return [].concat(_toConsumableArray(current.slice(0, index)), items, _toConsumableArray(current.slice(index)));\n    });\n  };\n\n  var apply = function apply(fn) {\n    return setState(function (current) {\n      return current.map(function (item, index) {\n        return fn(item, index);\n      });\n    });\n  };\n\n  var remove = function remove() {\n    for (var _len4 = arguments.length, indices = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      indices[_key4] = arguments[_key4];\n    }\n\n    return setState(function (current) {\n      return current.filter(function (_, index) {\n        return !indices.includes(index);\n      });\n    });\n  };\n\n  var pop = function pop() {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n\n      cloned.pop();\n      return cloned;\n    });\n  };\n\n  var shift = function shift() {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n\n      cloned.shift();\n      return cloned;\n    });\n  };\n\n  var reorder = function reorder(_ref) {\n    var from = _ref.from,\n        to = _ref.to;\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n\n      var item = current[from];\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      return cloned;\n    });\n  };\n\n  var setItem = function setItem(index, item) {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n\n      cloned[index] = item;\n      return cloned;\n    });\n  };\n\n  var setItemProp = function setItemProp(index, prop, value) {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n\n      cloned[index] = __spreadProps(__spreadValues({}, cloned[index]), _defineProperty({}, prop, value));\n      return cloned;\n    });\n  };\n\n  var applyWhere = function applyWhere(condition, fn) {\n    return setState(function (current) {\n      return current.map(function (item) {\n        return condition(item) ? fn(item) : item;\n      });\n    });\n  };\n\n  return [state, {\n    setState: setState,\n    append: append,\n    prepend: prepend,\n    insert: insert,\n    pop: pop,\n    shift: shift,\n    apply: apply,\n    applyWhere: applyWhere,\n    remove: remove,\n    reorder: reorder,\n    setItem: setItem,\n    setItemProp: setItemProp\n  }];\n}\n\nexport { useListState };","map":null,"metadata":{},"sourceType":"module"}