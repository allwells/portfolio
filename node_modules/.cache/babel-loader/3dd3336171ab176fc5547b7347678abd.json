{"ast":null,"code":"var DEFAULT_GRADIENT = {\n  from: \"indigo\",\n  to: \"cyan\",\n  deg: 45\n};\n\nfunction getSharedColorScheme(_ref) {\n  var color = _ref.color,\n      theme = _ref.theme,\n      variant = _ref.variant,\n      gradient = _ref.gradient;\n\n  if (variant === \"light\") {\n    return {\n      border: \"transparent\",\n      background: theme.fn.rgba(theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 8 : 0), theme.colorScheme === \"dark\" ? 0.35 : 1),\n      color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 2 : 6),\n      hover: theme.fn.rgba(theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 7 : 1), theme.colorScheme === \"dark\" ? 0.45 : 0.65)\n    };\n  }\n\n  if (variant === \"default\") {\n    return {\n      border: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[4],\n      background: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.white,\n      color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n      hover: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[0]\n    };\n  }\n\n  if (variant === \"white\") {\n    return {\n      border: \"transparent\",\n      background: theme.white,\n      color: theme.fn.themeColor(color, 6),\n      hover: null\n    };\n  }\n\n  if (variant === \"outline\") {\n    return {\n      border: theme.fn.rgba(theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 4 : 7), 0.75),\n      background: \"transparent\",\n      color: theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 4 : 7),\n      hover: theme.colorScheme === \"dark\" ? theme.fn.rgba(theme.fn.themeColor(color, 4), 0.05) : theme.fn.rgba(theme.fn.themeColor(color, 0), 0.35)\n    };\n  }\n\n  if (variant === \"gradient\") {\n    var merged = {\n      from: (gradient == null ? void 0 : gradient.from) || DEFAULT_GRADIENT.from,\n      to: (gradient == null ? void 0 : gradient.to) || DEFAULT_GRADIENT.to,\n      deg: (gradient == null ? void 0 : gradient.deg) || DEFAULT_GRADIENT.deg\n    };\n    return {\n      background: \"linear-gradient(\".concat(merged.deg, \"deg, \").concat(theme.fn.themeColor(merged.from, 6), \" 0%, \").concat(theme.fn.themeColor(merged.to, 6), \" 100%)\"),\n      color: theme.white,\n      border: \"transparent\",\n      hover: null\n    };\n  }\n\n  if (variant === \"subtle\") {\n    return {\n      border: \"transparent\",\n      background: \"transparent\",\n      color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 2 : 6),\n      hover: theme.fn.rgba(theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 8 : 0), theme.colorScheme === \"dark\" ? 0.35 : 1)\n    };\n  }\n\n  return {\n    border: \"transparent\",\n    background: theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 8 : 6),\n    color: theme.white,\n    hover: theme.fn.themeColor(color, 7)\n  };\n}\n\nexport { getSharedColorScheme };","map":null,"metadata":{},"sourceType":"module"}