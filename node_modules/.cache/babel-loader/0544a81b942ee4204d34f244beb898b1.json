{"ast":null,"code":"import _slicedToArray from \"/home/allie/Project/client-thecurrent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { forwardRef, useState, useRef } from 'react';\nimport { useUncontrolled, clamp, useMove, useMergedRef } from '@mantine/hooks';\nimport { useMantineDefaultProps, useMantineTheme } from '@mantine/styles';\nimport { getPosition } from '../utils/get-position/get-position.js';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value.js';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport { Track } from '../Track/Track.js';\nimport { SliderRoot } from '../SliderRoot/SliderRoot.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\n\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n\n  for (var prop in source) {\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  }\n\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return target;\n};\n\nvar defaultProps = {\n  size: \"md\",\n  radius: \"xl\",\n  min: 0,\n  max: 100,\n  step: 1,\n  marks: [],\n  label: function label(f) {\n    return f;\n  },\n  labelTransition: \"skew-down\",\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbLabel: \"\",\n  showLabelOnHover: true\n};\nvar Slider = forwardRef(function (props, ref) {\n  var _a = useMantineDefaultProps(\"Slider\", defaultProps, props),\n      classNames = _a.classNames,\n      styles = _a.styles,\n      color = _a.color,\n      value = _a.value,\n      onChange = _a.onChange,\n      onChangeEnd = _a.onChangeEnd,\n      size = _a.size,\n      radius = _a.radius,\n      min = _a.min,\n      max = _a.max,\n      step = _a.step,\n      precision = _a.precision,\n      defaultValue = _a.defaultValue,\n      name = _a.name,\n      marks = _a.marks,\n      label = _a.label,\n      labelTransition = _a.labelTransition,\n      labelTransitionDuration = _a.labelTransitionDuration,\n      labelTransitionTimingFunction = _a.labelTransitionTimingFunction,\n      labelAlwaysOn = _a.labelAlwaysOn,\n      thumbLabel = _a.thumbLabel,\n      showLabelOnHover = _a.showLabelOnHover,\n      thumbChildren = _a.thumbChildren,\n      others = __objRest(_a, [\"classNames\", \"styles\", \"color\", \"value\", \"onChange\", \"onChangeEnd\", \"size\", \"radius\", \"min\", \"max\", \"step\", \"precision\", \"defaultValue\", \"name\", \"marks\", \"label\", \"labelTransition\", \"labelTransitionDuration\", \"labelTransitionTimingFunction\", \"labelAlwaysOn\", \"thumbLabel\", \"showLabelOnHover\", \"thumbChildren\"]);\n\n  var theme = useMantineTheme();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hovered = _useState2[0],\n      setHovered = _useState2[1];\n\n  var _useUncontrolled = useUncontrolled({\n    value: typeof value === \"number\" ? clamp({\n      value: value,\n      min: min,\n      max: max\n    }) : value,\n    defaultValue: typeof defaultValue === \"number\" ? clamp({\n      value: defaultValue,\n      min: min,\n      max: max\n    }) : defaultValue,\n    finalValue: clamp({\n      value: 0,\n      min: min,\n      max: max\n    }),\n    rule: function rule(val) {\n      return typeof val === \"number\";\n    },\n    onChange: onChange\n  }),\n      _useUncontrolled2 = _slicedToArray(_useUncontrolled, 2),\n      _value = _useUncontrolled2[0],\n      setValue = _useUncontrolled2[1];\n\n  var valueRef = useRef(_value);\n  var thumb = useRef();\n  var position = getPosition({\n    value: _value,\n    min: min,\n    max: max\n  });\n\n  var _label = typeof label === \"function\" ? label(_value) : label;\n\n  var handleChange = function handleChange(val) {\n    var nextValue = getChangeValue({\n      value: val,\n      min: min,\n      max: max,\n      step: step,\n      precision: precision\n    });\n    setValue(nextValue);\n    valueRef.current = nextValue;\n  };\n\n  var _useMove = useMove(function (_ref) {\n    var x = _ref.x;\n    return handleChange(x);\n  }, {\n    onScrubEnd: function onScrubEnd() {\n      return onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n  }, theme.dir),\n      container = _useMove.ref,\n      active = _useMove.active;\n\n  function handleThumbMouseDown(event) {\n    if (event.cancelable) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  var handleTrackKeydownCapture = function handleTrackKeydownCapture(event) {\n    switch (event.nativeEvent.code) {\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          thumb.current.focus();\n          var nextValue = Math.min(Math.max(_value + step, min), max);\n          onChangeEnd == null ? void 0 : onChangeEnd(nextValue);\n          setValue(nextValue);\n          break;\n        }\n\n      case \"ArrowRight\":\n        {\n          event.preventDefault();\n          thumb.current.focus();\n\n          var _nextValue = Math.min(Math.max(theme.dir === \"rtl\" ? _value - step : _value + step, min), max);\n\n          onChangeEnd == null ? void 0 : onChangeEnd(_nextValue);\n          setValue(_nextValue);\n          break;\n        }\n\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          thumb.current.focus();\n\n          var _nextValue2 = Math.min(Math.max(_value - step, min), max);\n\n          onChangeEnd == null ? void 0 : onChangeEnd(_nextValue2);\n          setValue(_nextValue2);\n          break;\n        }\n\n      case \"ArrowLeft\":\n        {\n          event.preventDefault();\n          thumb.current.focus();\n\n          var _nextValue3 = Math.min(Math.max(theme.dir === \"rtl\" ? _value + step : _value - step, min), max);\n\n          onChangeEnd == null ? void 0 : onChangeEnd(_nextValue3);\n          setValue(_nextValue3);\n          break;\n        }\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(SliderRoot, __spreadProps(__spreadValues({}, others), {\n    size: size,\n    ref: useMergedRef(container, ref),\n    onKeyDownCapture: handleTrackKeydownCapture,\n    onMouseDownCapture: function onMouseDownCapture() {\n      var _a2;\n\n      return (_a2 = container.current) == null ? void 0 : _a2.focus();\n    },\n    classNames: classNames,\n    styles: styles\n  }), /* @__PURE__ */React.createElement(Track, {\n    offset: 0,\n    filled: position,\n    marks: marks,\n    size: size,\n    radius: radius,\n    color: color,\n    min: min,\n    max: max,\n    value: _value,\n    onChange: setValue,\n    onMouseEnter: showLabelOnHover ? function () {\n      return setHovered(true);\n    } : void 0,\n    onMouseLeave: showLabelOnHover ? function () {\n      return setHovered(false);\n    } : void 0,\n    classNames: classNames,\n    styles: styles\n  }, /* @__PURE__ */React.createElement(Thumb, {\n    max: max,\n    min: min,\n    value: _value,\n    position: position,\n    dragging: active,\n    color: color,\n    size: size,\n    label: _label,\n    ref: thumb,\n    onMouseDown: handleThumbMouseDown,\n    labelTransition: labelTransition,\n    labelTransitionDuration: labelTransitionDuration,\n    labelTransitionTimingFunction: labelTransitionTimingFunction,\n    labelAlwaysOn: labelAlwaysOn,\n    classNames: classNames,\n    styles: styles,\n    thumbLabel: thumbLabel,\n    showLabelOnHover: showLabelOnHover && hovered\n  }, thumbChildren)), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: _value\n  }));\n});\nSlider.displayName = \"@mantine/core/Slider\";\nexport { Slider };","map":null,"metadata":{},"sourceType":"module"}