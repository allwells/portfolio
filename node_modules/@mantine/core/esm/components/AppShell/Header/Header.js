import React, { forwardRef } from 'react';
import { getDefaultZIndex, useMantineDefaultProps, Global } from '@mantine/styles';
import { useAppShellContext } from '../AppShell.context.js';
import useStyles from './Header.styles.js';
import { Box } from '../../Box/Box.js';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const defaultProps = {
  fixed: false,
  position: { top: 0, left: 0, right: 0 },
  zIndex: getDefaultZIndex("app")
};
const Header = forwardRef((props, ref) => {
  const _a = useMantineDefaultProps("Header", defaultProps, props), { children, className, classNames, styles, height, fixed, position, zIndex } = _a, others = __objRest(_a, ["children", "className", "classNames", "styles", "height", "fixed", "position", "zIndex"]);
  const ctx = useAppShellContext();
  const { classes, cx } = useStyles({ height, fixed: ctx.fixed || fixed, position, zIndex: ctx.zIndex || zIndex }, { name: "Header", classNames, styles });
  return /* @__PURE__ */ React.createElement(Box, __spreadValues({
    component: "nav",
    className: cx(classes.root, className),
    ref
  }, others), children, /* @__PURE__ */ React.createElement(Global, {
    styles: () => ({
      ":root": {
        "--mantine-header-height": `${height}px`
      }
    })
  }));
});
Header.displayName = "@mantine/core/Header";

export { Header };
//# sourceMappingURL=Header.js.map
