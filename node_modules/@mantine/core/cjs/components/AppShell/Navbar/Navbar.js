'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var styles = require('@mantine/styles');
var AppShell_context = require('../AppShell.context.js');
var getSortedBreakpoints = require('./get-sorted-breakpoints/get-sorted-breakpoints.js');
var NavbarSection = require('./NavbarSection/NavbarSection.js');
var Navbar_styles = require('./Navbar.styles.js');
var Box = require('../../Box/Box.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e['default'] : e; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const defaultProps = {
  fixed: false,
  position: { top: 0, left: 0 },
  zIndex: styles.getDefaultZIndex("app"),
  hiddenBreakpoint: "md",
  hidden: false
};
const Navbar = React.forwardRef((props, ref) => {
  const _a = styles.useMantineDefaultProps("Navbar", defaultProps, props), {
    width,
    height,
    fixed,
    position,
    zIndex,
    hiddenBreakpoint,
    hidden,
    className,
    classNames,
    styles: styles$1,
    children
  } = _a, others = __objRest(_a, [
    "width",
    "height",
    "fixed",
    "position",
    "zIndex",
    "hiddenBreakpoint",
    "hidden",
    "className",
    "classNames",
    "styles",
    "children"
  ]);
  const ctx = AppShell_context.useAppShellContext();
  const { classes, cx, theme } = Navbar_styles['default']({
    width,
    height,
    fixed: ctx.fixed || fixed,
    position,
    hiddenBreakpoint,
    zIndex: ctx.zIndex || zIndex
  }, { classNames, styles: styles$1, name: "Navbar" });
  const breakpoints = getSortedBreakpoints.getSortedBreakpoints(width, theme).reduce((acc, [breakpoint, breakpointSize]) => {
    acc[`@media (min-width: ${breakpoint + 1}px)`] = {
      "--mantine-navbar-width": `${breakpointSize}px`
    };
    return acc;
  }, {});
  return /* @__PURE__ */ React__default.createElement(Box.Box, __spreadValues({
    component: "nav",
    ref,
    className: cx(classes.root, { [classes.hidden]: hidden }, className)
  }, others), children, /* @__PURE__ */ React__default.createElement(styles.Global, {
    styles: () => ({
      ":root": __spreadValues({
        "--mantine-navbar-width": (width == null ? void 0 : width.base) ? `${width.base}px` : "0px"
      }, breakpoints)
    })
  }));
});
Navbar.Section = NavbarSection.NavbarSection;
Navbar.displayName = "@mantine/core/Navbar";

exports.Navbar = Navbar;
//# sourceMappingURL=Navbar.js.map
