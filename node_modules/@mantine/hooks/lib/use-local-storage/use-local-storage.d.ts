interface UseLocalStorage<T> {
    key: string;
    defaultValue?: T;
    serialize?(value: T): string;
    deserialize?(value: string): T;
}
export declare function useLocalStorage<T = string>({ key, defaultValue, deserialize, serialize, }: UseLocalStorage<T>): readonly [T, (val: T | ((prevState: T) => T)) => void];
export declare const useLocalStorageValue: typeof useLocalStorage;
export {};
//# sourceMappingURL=use-local-storage.d.ts.map